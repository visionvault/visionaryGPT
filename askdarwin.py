# -*- coding: utf-8 -*-
"""Darwin-Diagrams.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qxKUlXJ3bslvZKn5WDW8XQLCWG8g_ZIh?resourcekey=0-DE4q5pJyV4yvMGpV1sbrSw
"""

pip install openai

#@title Keys

import os

os.environ["OPENAI_API_KEY"] = " "

pip install gradio



import openai

def get_completion(prompt, model="gpt-3.5-turbo"):
    messages = [{"role": "user", "content": prompt}]
    response = openai.ChatCompletion.create(
        model=model,
        messages=messages,
        temperature=0, # this is the degree of randomness of the model's output
    )
    return response.choices[0].message["content"]

def topic_diagram(topic):
  prompt_sum = f"""
  Imagine you are Charles Darwin, an expert in generating diagrams that explain complex concepts. Your goal is to create a diagram that visually represents a specific concept related to {topic}. The diagram should effectively communicate the relationships, processes, or hierarchies involved in the concept.
  Generate code for the diagram in mermaid syntax surrounded by ```.
  Output:
  Mermaid code: ```code```
"""

  response_sum = get_completion(prompt_sum)
  return response_sum

out = topic_diagram("Explain twitter architecture")

out

import re

def extract_text_between_backticks(text):
    pattern = r"```(.+?)```"
    matches = re.findall(pattern, text, re.DOTALL)
    return matches

result = extract_text_between_backticks(out)
print(result[0])

diagram = visualize_diagram(out)

diagram

import gradio as gr
from PIL import Image

import base64
import requests



def generate_diagram(mermaid_code):
    graphbytes = mermaid_code.encode("ascii")
    base64_bytes = base64.b64encode(graphbytes)
    base64_string = base64_bytes.decode("ascii")
    return "https://mermaid.ink/img/" + base64_string


def visualize_diagram(input_text):
    llm_output = topic_diagram(input_text)
    mermaid_code = extract_text_between_backticks(llm_output)
    print (mermaid_code)
    url = generate_diagram(mermaid_code[0])
    img = Image.open(requests.get(url, stream=True).raw)
    return img

input_text = gr.inputs.Textbox(label="Enter your question")
output_image = gr.outputs.Image(type="pil", label="Diagram")
examples = [
    ["Explain the architecture of Twitter"],
    ["How does Oauth work?"],
    ["Explain how Global warming affects life on earth"]
]

gr.Interface(
    fn=visualize_diagram,
    inputs=input_text,
    outputs=output_image,
    title="Darwin's Diagram Visualizer",
    description="Enter your question and see the generated diagram.",
    allow_flagging=False, examples=examples
).launch(share=True, debug=True)

